<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA8AAAAIwCAYAAABJMwI2AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAgkUlEQVR4Xu3dTWpc1/Y34DsE
        D0FD0BA0BA/BQ3Dv7arpnkkzLYP5t9xRw6TlhtMwaRkEgWAINiLEGJuAFIhNEkPwu1Z51b1lZ0uqUlWd
        s0/V88APLrmJVB9nw1raX/8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA9
        8+nTp8PIUeR25HghJ5GnN0j+d4s/J39u/vzD+pUAAACwHdWA3oksNrYXkU/n7z9+evX2wyxPfvztv3n0
        w5tP3z75ZeXkf7f4c+Y/O39Pyd+72Cjn6zqqlwoAAADLyWayGstsME8j/21yFxvbeycvP/2//3sxePL3
        LjbKXzXH+XrnjbGmGAAAgM+iSbwVySXG9yOzZvfN+V+fnr/6/dPj5+9mjWarCe01+Xrzdefrz/dR8n3l
        +8v3eaveOgAAALuuGsH/Nrzzmd2pNbvLJt/XfKa4/Lchro8EAACAXRCNXs7y5j7ZXBp8kTOjz16c72zD
        e10efv969v5rhjj3E+fnkp+P2WEAAICpyWaumrps7j799Osfs6XBY+3b7TX5eeTnkp9P0QwDAABMQTRu
        ubz5v01vHhR1/OjnZvMnXyY/p/y8vmqGLZMGAADoRTRpB5Hc0zpb3mymd/3MZ4brdOlcJp2f70F95AAA
        AAwpGrJcqvv0z7//mZ16/M13Z81mTtZLfq75+ebnnJ93fu71FQAAALAt0Xzl3t67kbOcnbTEebjMl0jX
        rPBZfQ/2CgMAAGxSNlqR48hFXuezryc495L8/OtapVwend+LRhgAAGAd0Vjl/t4HEcucO8x8eXTJ78k+
        YQAAgFVEI5Uzvnnw0qzBcqhV38nvZ6ERzu/NjDAAAMBVsnGKzJY6a3w/77t9+P3rT09+/G225DhPuf5a
        /rO8uij/nbFnyBcaYUujAQAALhPNUp7qPNvju+9LnXOP7cJ9vCuZHw7W+rlDJb+/hT3CTo0GAABI0SAd
        RU6zcdv3w60WDpdaWw+fZ/7+OjX6NHJUXzkAAMB+iYYolzuf5P2yj5+/azZQ+5Jc6vzsxXk2ihuXP7f1
        O4dMfr91j/BJxLJoAABgf0QTlHfIzvb57vs9vrlcuGZJtyY/59bvHjL5PS/sD75bjwIAAMBuisYnrzV6
        arnz52TzWzOjW5eHZLVew9BZWBb9NOLaJAAAYPdEs5OnAnfTiI2dIZvfuZ7+6JDPQTmuRwQAAGDaosGZ
        zfrmdT37frrzPGM0vym/g9brGSv5OdTVTmaDAQCAaYumZna1UQ8HMfWS3Avbus93KGNfkdRKHQDmyiQA
        AGB6opHJE54f5Cynvb5fZlunPS+rt1ngefI5qVnxBxEnRQMAAP2L5uUwcpr32e77Cc9fJ5u8HvS6FD2f
        l7oHOe8NPqxHCgAAoD/RtMyWPDvoqp1q7kbX+73LdUCWJdEAAECfolmx5PmK9DL7m7IRb73GnrK4JLoe
        MQAAgHFFg5L7fU9zb+m9k5fNZkZefPrp1z+ymetCNpat19hb8nlaOCXavmAAAGA80ZTkft+z569+t9/3
        imQj15vW6+wx+Vzl8xXOIvYFAwAAw8tmJGK/7xLJPbe9mdpS9YV9wZpgAABgONGE5GFXXd4p22N6Wv48
        N8W92vm8FYdjAQAA25fNh8OuVkuPpvr9LRyOpQkGAAC2J5qO+9l89HqPbI/Jz6pHU/4DRn6m1QTfr0cT
        AABgc6LZmF1zpPldLdlo9mjq3+NCE+yaJAAAYHOyycjraJz0vHoW9q12pfVap5Z8HuuaJE0wAACwvmwu
        NL83T51e3JXz9x+br3WK0QQDAAAbkU2F5ne99NgA56nUrdc61WiCAQCAtWQzofldPz3eAZyvqfVapxxN
        MAAAcCPRRBznAUP3Tl42mw1ZPj0egrWr32u+rzoY67geZQAAgMtF8zC759dpz5tJbw3wq7cfmq9zV7Jw
        OrR7ggEAgMtl06D53Xx68vD7183XuEvRBAMAAFeKZuEwcrEPDdLQqb2po9ul05+vSz7H4SJyWI84AADA
        rPk9yGYh76xtNROyXp69OM9mbHS5HLv1+nY1dQdzNsEH9agDAAD7LJqDW5HTbNJaTYSsn1ySO7Zdu/po
        2dQfH04jt+qRBwAA9lU0Bif72hwNmTGXQed+2H2+ziqf73BSjzwAALCPoik4dtfvMKk9qaPY90PNFu4I
        dj0SAADso2gGbjvxedjkFURDs6/7cxZOhr5dQwAAANgH0QTMDr1y4vOwyZnIasIGofn9MgsnQzsUCwAA
        9kU0AA69GikLM5FbY2b/8swPxaqhAAAA7LIo/u/nfshWcyDDZJtNcC6ztqf76tR+4Ps1JAAAgF0URf9R
        Nl73Tl42GwMZLtmk1unEG3H+/uNsiW/rd8mXyee//gBxVEMDAADYJVHs532/9v12lm+f/LLW4Vg5m2mv
        7+rJzyzkfmD3AwMAwK6JQt99vx0nZyUfP383mxW+anl0zvTmv5P/rpn89eJ+YAAA2EFR5M+uPLI3dFrJ
        BjdniDO+u81n4VRuVyMBAMAuiOLe0meRS7JwNZKl0AAAMHVR2Fv6LHJFLIUGAIAdEEX97NRny2dFLs/C
        UminQgMAwBRFMZ9Ln8+cECxyfepU6LMcNzWEAACAqYhC/jiv12kV+yLy79R1VMc1hAAAgCmIIv4gK/lv
        vjtrFvoi8u/keCkHNZQAAIDeRQF/8uzFebPIF5HLk+Mmx08NJQAAoGdRvDv4SuSGcSAWAABMSBTup4+f
        v2sW9yJyfXL85DiqIQUAAPQoivY75+8/Not6EVk+OY5yPNXQAgAAehMFu2uPRDaQ+bVINbQAAICe5GyV
        2V+RzcUsMAAAdCpnq7598kuzkBeR1ZPjKcdVDTEAAKAHOUv16u2HZhEvIjdPjqscXzXUAACAseUslb2/
        IpuPvcAAANCRnJ2y91dke7EXGAAAOhGF+anZX5HtpWaB3QsMAABjiqL8yOyvyPZTs8BHNfQAAIChRUF+
        8uTH35oFu4hsLjnOcrzV0AMAAIYUxfhBVuTHj35uFuwisrnkOCsHNQQBAIChRCF+//mr35vFuohsPjne
        ctzVEAQAAIYShfjFN9+dNQt1mX7yu338/N2s6cq7aBeT/+zbJ780/zvZXvI7yXFXQxAAABhCFOF33pz/
        1SzSZZrJJbZ52nA2t3/+/U82Wtf66dc/LIEfODnugiuRAABgKFGAP3X10W4kZ3JXaXq/5g8hw6auRHIY
        FgAADCGKb4dfTTzz2d66WmdtTgIfLg7DAgCAAUXhfTdnDFvFufSdbJ6yWb3pbO9l8uf5g8hwyfEX7taQ
        BAAAtiUK79OH379uFubSZ7bV+C7KA7Nav1s2nxx/4bSGJAAAsA1RdB9mE9UqyqW/DNH4zuXp0K3XINtJ
        faeHNTQBAIBNi4Lb3b8TSe7xHaLxXdR6HbKd1DJodwIDAMC2RMFt+XPnyVOd66qcwd07edl8TbL5WAYN
        AABbFMX2geXP/Sabz7yXd0zZfLdem2wnNcPvNGgAANi0KLSd/txp8gCqoZc7t2iAh43ToAEAYEui0H6a
        +0pbhbiMk2++OxttuXOLBnjY5HgMT2uIAgAAmxBF9q2stN312k/ydOfeaICHTY7HcquGKgAAsK4osG/n
        TGOrCJdh09us7yIN8PCpZ+F2DVUAAGBdUWDfzxnHVgEuw6XHWd9FGuDhU8+E65AAAGBTosA+1dyMlzzh
        +dXbD9nodM0zMnzyMw+uQwIAgE2I4nq2/7dVfMv2k/e99nDC8zI0wOOk2AcMAADrisL6ds4+tgpv2V7y
        gKO65mYyWu9Dtp9aHWAfMAAArCsKa/t/B07PB11dpfVeZPuxDxgAADYkCuunuQy3VXjL5jOlJc+LnBI+
        XvKZCe4DBgCAdWVl7f7fYfLsxXl+3JP0069/NN+TbD/z+4BryAIAADcRNfXh+fuPzaJbNpdsYKZwyvNV
        LJMfNzlOw2ENXQAAYFVRUN8xs7fd5H7fal4mzTL5cZPjNNypoQsAAKwqCmoHYG0xU93v25KNfOs9yjBx
        EBYAAKwpCuqn7nbdTh4/f5cNy07IJr71HmW4OAgLAADWFAX1xb2Tl82CW26eqd3vex33RI+fHKfhooYu
        AACwiiimb2VF3Sq25WbJw65qr+ZOsUy+j5RbNYQBAIBlRSF95G7XzSWb3/w8d5Fl8n2knq+jGsIAAMCy
        opB2AvSGkgdEbbr5zZOje2mo3RPdR5wEDQAAN5R9jaWt6yeb302e9Jz7hxdPXB57SbVVAv2kToI+riEM
        AAAsKwrpB3lScavQluWyyeY3G9/WgWR1+u9onr04/9drknFSJ4s/qCEMAAAsKwppVyCtkU01vznDetX3
        kP/fmLIBb70uGT71LLgKCQAAVhWF9KkG+OZZtzHN5nmZGfixG2D7f/tJPQunNYQBAIBlZSXdKrJl+eT9
        uDeR/92y9y/Xvs9R2P/bX1INYQAAYFlZSLcKbFk+q87OLjvru5jcgzsW+3/7S6ohDAAALCNq6INsxloF
        tqyWZWeBczZ18XTnZXPTWeZNsP+3v9S+84MaygAAwHWigD7KxqpVYMtqWWYWeJ2Z1E0ctHVT9v/2l/qD
        yFENZQAA4DpZQGuAN5e8wqglm9d1ZlFzxngs9v/2GQ0wAACsKAtoDfDmkgdafS0byGUPurosj354Uz9t
        ePb/9hkNMAAArCgK6Ds//fpHs8CWm2VxFjj/9yaWD182szwE+3/7TI7bcKeGMgAAcJ0ooI/zep1WgS03
        y3wWeNVTnq/K+fuPs585Bvt/+0xdi3VcQxkAALhOFtAa4M1n3SXPi8kGdCz2//YbDTAAAKwoC2gNcN/J
        Jchjsf+332iAAQBgRVlAa4D7TjahY7H/t99ogAEAYEVZQGuA+04uQx6L/b/9RgMMAAArygJaA9xv7P+V
        y6IBBgCAFWUBrQHuN/b/ymXRAAMAwIqygNYA95tqckZh/2/f0QADAMCKsoDWAPebV28/ZJMzik1e5SSb
        jwYYAABWlAW0BrjfjOX8/cfm65F+ogEGAIAVRQF99/mr35sFtoybb5/8kg3OKDwT/Se/o3C3hjIAAHCd
        KKCPcpltq8CWcVMzfKN49MOb5muSflLL449qKAMAANfJAloD3Gfs/5WrogEGAIAVZQGtAe4zY7H/dxrR
        AAMAwIqigD7U8PSXb747y+ZmFPb/TiM5bsNhDWUAAGAZWUW3CmwZL4+fv8uvZRT2/04jqYYwAACwrCyk
        WwW2jJeffv1j1uCMwf7faSTVEAYAAJYVdfRZLrltFdkyTv78+59ZgzM0y+GnkVoif1ZDGAAAWFYU0k/z
        ztlWoS3Dx/5fuS51R/TTGsIAAMCyopA+se+zn9j/K9clv6dwUkMYAABYVhTSx09+/K1ZaMvwyVnYsdj/
        O43keA3HNYQBAIBlRSF919LXflLX2wzO/t/ppP5IcreGMAAAsKwopI9evf3QLLRl2OQM7Fj8EWQ6yfEa
        jmoIAwAAy4pC+iBPHW4V2jJsam/nKOz/nU7qlPCDGsIAAMAqspo+fvRzs9iW4WL/r1yXHKephi4AALCq
        qKddhdRB3pz/NWtuhmb/73TiCiQAAFhTFNQP8vqdVsEtw2Q+szcG+3+nk7om60ENXQAAYFVRUB9rgsbN
        w+9fZ2MzCvt/p5NaJu8KJAAAuKkoqI9y+W2r4JZh8uzFeTY2o7D/dzqpZfJOgAYAgJuKgvpWVtWtgluG
        if2/skzKrRq6AADATURRfeogrHFi/68skzoA67SGLAAAcFNRWDsIa6RUYzMK+3+nEwdgAQDAhkRhfeen
        X/9oFt6y3Tz58bdsbEbxzXdnzdck/SXHZ7hTQxYAALipKKwP//z7n2bhLdvNq7cfsrEZnO97WsnvKxzW
        kAUAANYRxfWFGcHhMxYz/tNJjstwUUMVAABYVxTYJ/YBD5sx9//6rqcT+38BAGDDosC2D3jg2P8ry8T+
        XwAA2LAosA/sCx029v/KMqn9vwc1VAEAgE2IIvvMfcDDpRqbwZnpn05qmfxZDVEAAGBTotC+/+zFebMQ
        l82mDjYahf2/00mOx3C/higAALApUWgfnb//2CzEZbOpg41GYf/vdJLjMRzVEAUAADYpim3XIQ2QOtho
        cPb/TieuPwIAgC2LgvuBZdDbj/2/cl1q+bPrjwAAYFui4L5tGfR2Y/+vLJNa/ny7hiYAALANUXRbBr3F
        PPrhTTY2o/C9TiOWPwMAwECi8LYMeot5/ur3bG4GZ//vdGL5MwAADCQK70PLoLeXWto6OPt/p5N6Rg5r
        SAIAANsUxffZw+9fN4tzuXnunbzMxmYU9v9OIznuwlkNRQAAYNuiAL9rxnDzsf9XrktdkXW3hiIAALBt
        UYAfZBV+/OjnZpEuN0vt7Ryc/b/TyMIKgYMaigAAwBCiCD958uNvzUJdbpY35399bm8GZjZ/GsnxFk5q
        CAIAAEOJQvzIYVibS86mj8X+32mkDr86qiEIAAAMKYrxs9y32irWZbXU4UajsP+3/9T+cIdfAQDAWKIg
        v/Pq7YdmwS6rxf5fuSo5zsKdGnoAAMDQoiC/Fbn49skvzaJdlo/9v3JZcnyFi8itGnoAAMAYoig/fv7q
        92bhLstnLA4y6z919dFxDTkAAGAsUZjPZoHzipZW8S7Xp2b4RmH2vu/U1UdmfwEAoBdRnN83C3zz1PU2
        o2i9HuknOa7C/RpqAADA2KJAP8gq3SzwzVIHHA3OAWZ9p2Z/00ENNQAAoAdRpD8wC3yzjMX+375Ts78P
        aogBAAC9iELdXuAbxP5facXeXwAA6FwU68eW1a4W+3+llVoW7+RnAADoVRTs7gVeMXXFzeD8oaLf1KoA
        s78AANC7KNrvvjn/q1nYy7/z59//ZLMzOPt/+02On3C3hhQAANCzKN7PHv3wplncy//yzXdn2eiMYtOz
        9PZ+byY5bsJZDSUAAKB3UcDfzpnN40c/N4t8+ZzHz99lszOK1uu5abKZzu/74fevm/+/LJccL7Ui4HYN
        JQAAYAqiiH/67MV5s9CXz9mF/b81Yznjjx7rJcdLeFpDCAAAmIoo5A+yms9lvq1iX8bb/5szz63Xs2rq
        ntov+KPHzbKwHP6ghhAAADAlUcy7FumS1D2vo1j3jxI5y1vX9DT5o8fqce0RAADsgCjqzzY147hLWVw6
        PKScdW69nmWTze35+4/109qcAr5aai+4g68AAGDqorA/yqbLKcFfprV8eAjrzMhn077ssm1/9FguOS7q
        Mz2qIQMAAExZFPf3LYX+MtfNom7LTe7/zSXPqzbs/uixXGrp8/0aKgAAwNRFgX8rYil0Zcz9v6teVZRL
        nnNJ803kKdetnymfM1/6HLlVQwUAANgFUeTPlkI7IOnFrAkdS97Z23pNreRs8bp83+3k52LpMwAA7LAo
        9o8dkDTe/t+0TEO6zqzvonyfrZ8vL+afr1OfAQBgl0XRf7rvd8Vuorm8qatmgHOv7yZmfZPm9/Lk8x9O
        a0gAAAC7Kgr/g8jFqntRdyXZZI7pss89T3je1MFcZvkvTy1/v4gc1JAAAAB2WRT/t/f1lOAx9/+mxdO4
        sxnfZOObsvnNn7v4nuVzFq48ul1DAQAA2AfRBNzfx2ZpU0uM15ENb12/s1Ga38uTn0stfXflEQAA7KNo
        Bp7u217RbTSePdD8Xp06+OxpPfoAAMC+iYYg7we+2Kf7gWsJ7E7Jpl7ze3nqvt/c9+u+XwAA2GfRFBxm
        c7APh2LlHtBd47Tnq7Nw6NVhPfIAAMA+i+bgTs6MLnNH7ZQz9gFYm6b5vTr5PNeM/5161AEAAGZN8N1s
        FnZ5KW0PB2Btyr7f5Xxd8jmu5vduPeIAAAD/E83Cg10+TKkOQpq8vDqp9f7kc/L5rROfH9SjDQAA8G/Z
        NGTz0Gospp6pnwCdM5rfPvml+d7kf9H8AgAAS4nGIU+GPt3F/aW1JHaS8u7gXd+jvYnULP9pxInPAADA
        9bJ5yCZi15rgqXLN0XLR/AIAADeSTUQ2E7vSBGcDOUUOu1ouml8AAGAt2UxkU7ELTXDunZ2SXK7tsKvl
        ovkFAAA2IpuKbC6m3gRPqQHOQ5zs910uml8AAGCjsrnIJmPKTfBUGuD8jO33XS6aXwAAYCuyychm46df
        /5hkg9Z7A5xLnh9+/7r52uXL5POXz2HQ/AIAANuRzUY2HblEd2pNcM8NcJ7yfO/kZfN1y5fJ567u+dX8
        AgAA2xeNx4NsQqbUtPXYAOes7+Pn75qvV/6dfN6q+X1QjyIAAMD2ZROSDdxUDmvK5qknZn1XSz5n+bwF
        zS8AADC8aEbuTOm6nh5M6fPqJfl5VfN7px49AACA4UVTcjty8eTH35rNS0+p5bOjccLz6snnKlxEbtcj
        BwAAMJ5oTg4j3Z8QXdfmDC6XO+ce5NZrkna+Oun5sB41AACA8UWTkidEn+Qsa6/7gvOaoSGdv/9oufMN
        ks9PzdafRJz0DAAA9CkaluOe97nWXtKtyt8xhSXhPWZhv+9xPVIAAAD9iublKHLR45Lo2lO6FfPG1z7f
        1bOw5Dn3+x7VowQAANC/aGJmS6JzGXBP+1+z0crXtEnzpc4a35sln4/6Tix5BgAApisamruRrk6JXrhT
        di05Y5n7ilu/Q5bLwinPd+uRAQAAmK5obg4ipz0dkLVw0NJK8r95/Pzdp3snL5s/V5bLwuf/NHJQjwoA
        AMBuiEbnOHLx7MV5N8uFc+ly7T1tyqW5eX1S/nua3vWT33t+/yFnfR10BQAA7K5oenI2+Glve4Mz2eDm
        a8r0MlO9S8nl4rXX16wvAACwP6IBuhOZnRRtZnW3k9/vwgnPd+oRAAAA2B/RDOVJ0fezM3J90O4lv8+F
        a6fye3bCMwAAsN+iMTqMPM2TmXOvbauZkmklv8c6aTuXOx/WVw0AAECKRukocja/V7fVWEnfye+t9vme
        5fdZXy0AAAAt0Tjl/uCzvCant4OypJ38nupao2x87fMFAABYxWIjbEa4z3w146vxBQAAWMe8EbY0up9o
        fAEAALaoGuHZYVl5urDrk4ZNft75uS8cbqXxBQAA2KZovPKwrAfZheX9svYJbzf5+dY9vik/d4dbAQAA
        DCkasYPIcWS2PNqs8OYyn+1dWOacn7N7fAEAAMYWzdntyGxWeH5o1vGjn5vNnbSTn1d+bnWac8rP83Z9
        xAAAAPQkGrZbkdwrfBKZLd3Nps7McDv5ueTns7DEOT+3/PzM9gIAAExFNnHVzM2a4ZzZzGW933x31mwG
        9yX5/vNzWJjp1fQCAADsimzuIvNl0md5knHOej5+/m7nG+J8f/k+8/3WCc65p3e2vDmi6QUAANhl0fjl
        AVp3Izn7eTFviHNmNE89nur+4Xzd+frzfbx6+2He8F7U+8z3e1AfAQAAAPsoG8NILgO+H8k7bmcnIGcT
        mc1k7pPt7bqlfD35uubNbp3YnPL15/vI96PhBQAA4GrRPB5WE5lXAGVTeRqZzapmwzmfMc48/P71rCHd
        xOzxfBY3kz93/jvy9y3M6qZ8Pfm68vXl6zyslw4AAADri0YzZ4uPqunM5nPeIM/zL/PZ5K+zMGv7tcWf
        N/8d+fvy95rVBQAAoE/RtOZscjavX8esLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsKP+85//D1Blw+P9weKLAAAAAElFTkSuQmCC
</value>
  </data>
</root>